trigger:
- master
- feature/*

pool: default

stages:
# Continuous Integration Process
- stage: CI
  jobs:
  - job: BuildAndPushDocker
    workspace: 
      clean: all
    steps:
    - script: |
        if ! command -v node; then
          sudo apt-get remove docker docker-engine docker.io containerd runc
          sudo apt-get update
          sudo apt-get install \
          ca-certificates \
          curl \
          gnupg \
          lsb-release
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
          echo $(docker -v)
        fi
      displayName: install_Docker
    # - task: DockerInstaller@0
    #   inputs:
    #     dockerVersion: '17.09.0-ce'
    - task: Docker@2
      displayName: Build an image
      inputs:
        repository: 'img'
        command: build
        Dockerfile: Dockerfile
    - task: Docker@2
      inputs:
        command: 'buildAndPush'
        Dockerfile: '.Dockerfile'

# Continuous Deployment Process for Staging Environment
# - stage: DeployToStaging
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: staging
#     displayName: Deploy to Staging
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - <<YOUR TASKS>>
          
# Continuous Delivery Process for Production Environment
# - stage: DeployToProduction
#   condition: and(succeeded(), eq(variables['build.sourceBranch'], 'refs/heads/master'))
#   jobs:
#   - deployment: production
#     displayName: Deploy to Production
#     environment:
#       name: <<YOUR ENVIRONMENT NAME>>
#       resourceType: VirtualMachine
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - <<YOUR TASKS>>
